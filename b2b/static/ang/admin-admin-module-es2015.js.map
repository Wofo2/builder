{"version":3,"sources":["./src/app/admin/admin-dashboard/add-options/add-options.component.html","./src/app/admin/admin-dashboard/add-professional/add-professional.component.html","./src/app/admin/admin-dashboard/add-questions/add-questions.component.html","./src/app/admin/admin-dashboard/add-subcategory/add-subcategory.component.html","./src/app/admin/admin-dashboard/admin-dashboard.component.html","./src/app/admin/admin-dashboard/admin-order-details/admin-order-details.component.html","./src/app/admin/admin-dashboard/all-category/all-category.component.html","./src/app/admin/admin-dashboard/all-professional/all-professional.component.html","./src/app/admin/admin-dashboard/all-subcategory/all-subcategory.component.html","./src/app/admin/admin-dashboard/bulk-message/bulk-message.component.html","./src/app/admin/admin-dashboard/create-category/create-category.component.html","./src/app/admin/admin-dashboard/orders/orders.component.html","./src/app/admin/admin-dashboard/users/users.component.html","./src/app/admin/admin-dashboard/view-professionals/view-professionals.component.html","./src/app/admin/admin-login/admin-login.component.html","./src/app/admin/admin-login/forgot-pass/forgot-pass.component.html","./src/app/admin/admin-login/reset-pass/reset-pass.component.html","./src/app/admin/admin-dashboard/add-options/add-options.component.css","./src/app/admin/admin-dashboard/add-options/add-options.component.ts","./src/app/admin/admin-dashboard/add-professional/add-professional.component.css","./src/app/admin/admin-dashboard/add-professional/add-professional.component.ts","./src/app/admin/admin-dashboard/add-questions/add-questions.component.css","./src/app/admin/admin-dashboard/add-questions/add-questions.component.ts","./src/app/admin/admin-dashboard/add-subcategory/add-subcategory.component.css","./src/app/admin/admin-dashboard/add-subcategory/add-subcategory.component.ts","./src/app/admin/admin-dashboard/admin-dashboard.component.css","./src/app/admin/admin-dashboard/admin-dashboard.component.ts","./src/app/admin/admin-dashboard/admin-order-details/admin-order-details.component.css","./src/app/admin/admin-dashboard/admin-order-details/admin-order-details.component.ts","./src/app/admin/admin-dashboard/all-category/all-category.component.css","./src/app/admin/admin-dashboard/all-category/all-category.component.ts","./src/app/admin/admin-dashboard/all-professional/all-professional.component.css","./src/app/admin/admin-dashboard/all-professional/all-professional.component.ts","./src/app/admin/admin-dashboard/all-subcategory/all-subcategory.component.css","./src/app/admin/admin-dashboard/all-subcategory/all-subcategory.component.ts","./src/app/admin/admin-dashboard/bulk-message/bulk-message.component.css","./src/app/admin/admin-dashboard/bulk-message/bulk-message.component.ts","./src/app/admin/admin-dashboard/create-category/create-category.component.css","./src/app/admin/admin-dashboard/create-category/create-category.component.ts","./src/app/admin/admin-dashboard/orders/orders.component.css","./src/app/admin/admin-dashboard/orders/orders.component.ts","./src/app/admin/admin-dashboard/users/users.component.css","./src/app/admin/admin-dashboard/users/users.component.ts","./src/app/admin/admin-dashboard/view-professionals/view-professionals.component.css","./src/app/admin/admin-dashboard/view-professionals/view-professionals.component.ts","./src/app/admin/admin-login/admin-login.component.css","./src/app/admin/admin-login/admin-login.component.ts","./src/app/admin/admin-login/forgot-pass/forgot-pass.component.css","./src/app/admin/admin-login/forgot-pass/forgot-pass.component.ts","./src/app/admin/admin-login/reset-pass/reset-pass.component.css","./src/app/admin/admin-login/reset-pass/reset-pass.component.ts","./src/app/admin/admin-routing.module.ts","./src/app/admin/admin.module.ts","./src/app/services/admin-auth.service.ts","./src/app/services/admin-authguard.service.ts"],"names":[],"mappings":"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","file":"admin-admin-module-es2015.js","sourcesContent":["export default \"\\n<nb-card>\\n    <nb-card-header>Add Options</nb-card-header>\\n\\n    <nb-card-body>\\n        <form [formGroup]=\\\"optionForm\\\" (ngSubmit)=\\\"onOptions()\\\">\\n            <label>Select Category</label>\\n            <select class=\\\"form-control\\\" (change)=\\\"onCategory($event.target.value)\\\" formControlName='category'>\\n                <option selected disabled>select category</option>\\n                <option *ngFor='let category of categories' [value]='category.id'>{{ category.category }}</option>\\n            </select>\\n\\n            <br>\\n            <br>\\n            <label>Select Subcategory</label>\\n            <select class=\\\"form-control\\\" (change)=\\\"onSubcategory($event.target.value)\\\" formControlName='subcategory'>\\n                <option selected disabled>select subcategory</option>\\n                <option *ngFor='let subcategory of showSubcat' [value]='subcategory.id'>{{ subcategory.subcategory }}\\n                </option>\\n            </select>\\n            <br>\\n            <br>\\n            <label>Select Question</label>\\n            <select class=\\\"form-control\\\" (change)=\\\"onQuestion($event.target.value)\\\" formControlName='question'>\\n                <option selected disabled>select question</option>\\n                <option *ngFor='let question of questions' [value]='question.id'>{{ question.question }}\\n                    ({{ question.select_type }})\\n                </option>\\n            </select>\\n            <br>\\n            <br>\\n\\n            <hr>\\n            <div *ngIf='questionType != \\\"form\\\"'>\\n                <input type=\\\"text\\\" nbInput placeholder=\\\"Enter Choice\\\" fullWidth fieldSize=\\\"medium\\\" formControlName='choice'>\\n                <br> <br>\\n                \\n            </div>\\n            <div *ngIf='questionType == \\\"form\\\"'>\\n                <input type=\\\"text\\\" nbInput placeholder=\\\"Enter Choice\\\" fullWidth fieldSize=\\\"medium\\\" formControlName='choice'>\\n                <br> <br>\\n                <input type=\\\"text\\\" nbInput placeholder=\\\"Enter Factor\\\" fullWidth fieldSize=\\\"medium\\\" formControlName='factor'>\\n                <br><br>\\n                <input type=\\\"text\\\" nbInput placeholder=\\\"Enter Price\\\" fullWidth fieldSize=\\\"medium\\\" formControlName='price'>\\n                <br><br>\\n                \\n            </div>\\n            <button type=\\\"submit\\\" nbButton [disabled]='!optionForm.valid'>Upload</button>\\n            \\n        </form>\\n    </nb-card-body>\\n</nb-card>\"","export default \"<nb-card >\\n  <nb-card-header>\\n    <h2>Create Professionals</h2>\\n\\n  </nb-card-header>\\n\\n\\n  <nb-card-body>\\n\\n    <form [formGroup]=\\\"professionalForm\\\" (ngSubmit)=\\\"onProfessionals()\\\">\\n      <input type=\\\"text\\\" formControlName='professional' placeholder=\\\"Name\\\" nbInput fullWidth> <br><br>\\n      <input type=\\\"text\\\" formControlName='service_charge' placeholder=\\\"Service Charge\\\" nbInput fullWidth> <br><br>\\n      <input type=\\\"text\\\" formControlName='contact_number1' placeholder=\\\"Contact Number 1\\\" nbInput fullWidth><br><br>\\n      <input type=\\\"text\\\" formControlName='contact_number2' placeholder=\\\"Contact Number 2\\\" nbInput fullWidth><br><br>\\n      <input type=\\\"text\\\" formControlName='address' placeholder=\\\"Address\\\" nbInput fullWidth><br>\\n      <br>\\n\\n      <input type=\\\"file\\\" name=\\\"icon\\\" (change)=\\\"onChange($event)\\\" nbInput fullWidth> <br>\\n      <br>\\n      <span><b>Select Subcategories :</b></span>\\n      <br><br>\\n      <div class=\\\"row\\\">\\n        <div *ngFor='let subcat of subcategories' class=\\\"col-3\\\">\\n          <input type=\\\"checkbox\\\" [checked]='checkMap.get(subcat.id)' id='{{subcat.id}}' formControlName='subcategory'\\n            value=\\\"{{subcat.id}}\\\" (change)=\\\"onSubcat($event.target.value)\\\">\\n          &nbsp; <label for=\\\"{{subcat.id}}\\\">{{ subcat.subcategory}}</label>\\n        </div>\\n      </div>\\n\\n      <br>\\n      <button type=\\\"submit\\\" nbButton [disabled]='!professionalForm.valid'>Add Profesional</button>\\n\\n    </form>\\n  </nb-card-body>\\n</nb-card>\"","export default \"<nb-card>\\n    <nb-card-header>Add Questions</nb-card-header>\\n\\n    <nb-card-body>\\n        <form [formGroup]=\\\"questionForm\\\" (ngSubmit)=\\\"onquestions()\\\">\\n            <label>Select Category</label>\\n            <select class=\\\"form-control\\\" (change)=\\\"onCategory($event.target.value)\\\" formControlName='category'>\\n                <!-- <option selected disabled>select category</option> -->\\n                <option *ngFor='let category of categories' [value]='category.id'>{{ category.category }}</option>\\n            </select>\\n\\n            <br>\\n            <br>\\n            <label>Select Subcategory</label>\\n            <select class=\\\"form-control\\\" (change)=\\\"onSubcategory($event.target.value)\\\" formControlName='subcategory'>\\n                <!-- <option selected disabled>select category</option> -->\\n                <option *ngFor='let subcategory of showSubcat' [value]='subcategory.id'>{{ subcategory.subcategory }}\\n                </option>\\n            </select>\\n            <br>\\n            <br>\\n            <label>Select Parent Question</label>\\n            <select class=\\\"form-control\\\" (change)=\\\"onQuestion($event.target.value)\\\" formControlName='parent_question'>\\n                <!-- <option selected disabled>select question</option> -->\\n                <option *ngFor='let question of questions' [value]='question.id'>{{ question.question }}\\n                    ({{ question.select_type }})\\n                </option>\\n            </select>\\n            <br>\\n            <br>\\n            <b *ngIf='options'> Options </b>\\n            <div *ngFor='let option of options'>\\n            <br>\\n                <input type=\\\"checkbox\\\" value=\\\"{{option.id}}\\\" (change)=\\\"onoption($event.target.value)\\\" formControlName='parent_option'>\\n                <label for=\\\"{{option.id}}\\\">{{ option.choice}}</label>\\n            </div>\\n\\n            <hr>\\n            <label><b>Question Type</b> </label>\\n            <select class=\\\"form-control\\\" formControlName='select_type'>\\n                <option selected disabled>Question type</option>\\n                <option value='single'>Single select\\n                </option>\\n                <option value='multi'>Multiple select\\n                </option>\\n                <option value='form'>Form Type\\n                </option>\\n            </select>\\n            <br><br>\\n            <input type=\\\"text\\\" nbInput placeholder=\\\"Enter Question\\\" fullWidth fieldSize=\\\"medium\\\" formControlName='question'>\\n            <br> <br>\\n            <nb-checkbox (checkedChange)=\\\"toggle($event)\\\" formControlName='required'>Required</nb-checkbox>\\n            <br>\\n            <button type=\\\"submit\\\" nbButton [disabled]='!questionForm.valid'>Upload</button>\\n        </form>\\n    </nb-card-body>\\n</nb-card>\"","export default \"<!-- <p>create-category works!</p> -->\\n\\n<nb-card>\\n    <nb-card-header><h3> Add Subcategory</h3></nb-card-header>\\n\\n\\n    \\n     <nb-card-body>\\n      <p><b>Note: </b> Icon size should of ratio: <b>137px * 137px</b></p>\\n      <form [formGroup]=\\\"subcategoryForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n          <label > <b> Subcategory Name :</b></label> <br>\\n        <input type=\\\"text\\\" formControlName='subcategory' nbInput placeholder=\\\"Subcategory\\\" fullWidth > \\n        <br>\\n        <br>\\n        <label > <b> Select Category :</b></label> <br>\\n\\n        <select class=\\\"form-control\\\" formControlName='category'>\\n            <option selected disabled>Select category</option>\\n            <option value=\\\"{{ category.id }}\\\" *ngFor='let category of categories'>{{ category.category}}</option>\\n        </select>\\n        <br>\\n        <label > <b> Select Icon :</b></label> <br>\\n        <input type=\\\"file\\\" name=\\\"icon\\\" (change)=\\\"onChange($event)\\\" nbInput fullWidth />\\n        <br> <br>\\n        <button type=\\\"submit\\\" nbButton [disabled]='!subcategoryForm.valid'>Add Subcategory</button>\\n\\n      </form>\\n    </nb-card-body>\\n\\n     \\n  </nb-card>\"","export default \"<!-- <p>admin-login works!</p> -->\\n<nb-layout>\\n  <nb-layout-header fixed>\\n      <div class=\\\"col-11\\\">\\n          <h1 >WOFO24</h1>\\n\\n      </div>\\n      <div class=\\\"col-1\\\">\\n          <button nbButton (click)='onLogout()'>Logout</button>\\n      </div>\\n  </nb-layout-header>\\n\\n  <nb-sidebar>\\n    <nb-menu [items]=\\\"items\\\"></nb-menu>\\n  </nb-sidebar>\\n\\n\\n  <nb-layout-column >\\n  \\n    <router-outlet></router-outlet>\\n  </nb-layout-column>\\n</nb-layout>\"","export default \"<nb-card>\\r\\n    <nb-card-header>Order Details</nb-card-header>\\r\\n\\r\\n    <nb-card-body *ngIf='orders'>\\r\\n        <b> Order ID:</b> {{ orders[0].id }}\\r\\n        <br>\\r\\n        <br>\\r\\n        <b> Service Status:</b> {{ orders[0].service_status }}\\r\\n        <br>\\r\\n        <br>\\r\\n        <b> Address:</b> {{ orders[0].address }}\\r\\n        <br>\\r\\n        <br>\\r\\n        <b> Category:</b> {{ orders[0].category}}\\r\\n        <br>\\r\\n        <br>\\r\\n        <b> Subcategory: </b>{{ orders[0].subcategory.subcategory }}\\r\\n        <br>\\r\\n        <br>\\r\\n        <nb-accordion multi>\\r\\n            <nb-accordion-item>\\r\\n                <nb-accordion-item-header>\\r\\n                    User Details\\r\\n                </nb-accordion-item-header>\\r\\n                <nb-accordion-item-body>\\r\\n                    <div>\\r\\n                       <b> Name: </b> {{ orders[0].user.name}} <br> <br>\\r\\n                       <b> Conatct No: </b> {{ orders[0].user.phone_number}}\\r\\n                    </div>\\r\\n                </nb-accordion-item-body>\\r\\n            </nb-accordion-item>\\r\\n            <nb-accordion-item>\\r\\n                <nb-accordion-item-header>\\r\\n                    Response\\r\\n                </nb-accordion-item-header>\\r\\n                <nb-accordion-item-body>\\r\\n                    <div *ngFor=\\\"let item of orders[0].response | keyvalue\\\">\\r\\n\\r\\n                        <div *ngIf='item.key != \\\"form\\\"'>\\r\\n                            <b>{{item.key}} : </b> {{item.value}} <br> <br>\\r\\n                        </div>\\r\\n                        <div *ngIf='item.key == \\\"form\\\"'>\\r\\n                            <b>{{item.key}}</b> <br> <br>\\r\\n                            <div *ngFor='let option of item.value.options'>\\r\\n                                <div><b> {{ option.choice }}:</b> {{ option.quantity }}</div> <br>\\r\\n                                <div><b> Cost:</b> {{ option.cost }}</div> <br>\\r\\n                                <div><b> Price:</b>  {{ option.price }}</div><br>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n\\r\\n\\r\\n                    </div>\\r\\n                </nb-accordion-item-body>\\r\\n            </nb-accordion-item>\\r\\n\\r\\n\\r\\n\\r\\n            <nb-accordion-item>\\r\\n                <nb-accordion-item-header *ngIf=' orders[0].service_status == \\\"Pending\\\"'>\\r\\n                    Assign Professionals\\r\\n                </nb-accordion-item-header>\\r\\n                <nb-accordion-item-header *ngIf=' orders[0].service_status != \\\"Pending\\\"'>\\r\\n                    Assigned Professional\\r\\n                </nb-accordion-item-header>\\r\\n                <nb-accordion-item-body>\\r\\n                    <nb-list *ngIf='orders[0].professional_assigned == null && orders[0].service_status == \\\"Pending\\\"'>\\r\\n                        <nb-list-item *ngFor=\\\"let professional of professionals\\\">\\r\\n                            <nb-radio-group [(ngModel)]=\\\"option\\\">\\r\\n                                <nb-radio [value]=\\\"professional.id\\\">\\r\\n                                    <span>\\r\\n                                        {{ professional.name }}\\r\\n                                        ( {{ professional.contact_number1 }} )\\r\\n                                    </span>\\r\\n\\r\\n                                    <button type=\\\"button\\\" nbButton style=\\\"margin-right: 0rem\\\"\\r\\n                                        (click)='onView(professional.id)'>View</button>\\r\\n\\r\\n                                </nb-radio>\\r\\n                            </nb-radio-group>\\r\\n\\r\\n                        </nb-list-item>\\r\\n                    </nb-list>\\r\\n                    <div *ngIf='orders[0].professional_assigned != null && orders[0].service_status != \\\"Pending\\\"'>\\r\\n                        <img src=\\\"{{ orders[0].professional_assigned.photo }}\\\" alt=\\\"\\\"> <br> <br>\\r\\n                        <b>Name: </b> {{ orders[0].professional_assigned.name }} <br> <br>\\r\\n                        <b>Service Charge: </b> {{ orders[0].professional_assigned.service_charge }} <br> <br>\\r\\n                        <b>Contact Number 1: </b> {{ orders[0].professional_assigned.contact_number1 }} <br> <br>\\r\\n                        <b>Contact Number 2: </b> {{ orders[0].professional_assigned.contact_number2 }} <br> <br>\\r\\n                        <b>Address: </b> {{ orders[0].professional_assigned.address }} <br> <br>\\r\\n                    </div>\\r\\n                </nb-accordion-item-body>\\r\\n            </nb-accordion-item>\\r\\n\\r\\n\\r\\n        </nb-accordion>\\r\\n    </nb-card-body>\\r\\n    <nb-card-footer *ngIf='orders'>\\r\\n        <div *ngIf='orders[0].service_status == \\\"Pending\\\"'>\\r\\n            <button type=\\\"button\\\" nbButton [disabled]='!option' (click)='onAccept(orders[0].id)'>Accept</button> &nbsp;\\r\\n            <button type=\\\"button\\\" nbButton (click)='onDecline(orders[0].id)'>Decline</button>\\r\\n\\r\\n        </div>\\r\\n        <div *ngIf='orders[0].service_status == \\\"accepted\\\"'>\\r\\n            <button type=\\\"button\\\" nbButton (click)='onComplete(orders[0].id)'>Complete</button> &nbsp;\\r\\n\\r\\n        </div>\\r\\n    </nb-card-footer>\\r\\n</nb-card>\"","export default \"\\r\\n  <nb-card>\\r\\n    <nb-card-header><h3> All Categories</h3></nb-card-header>\\r\\n    <nb-card-body>\\r\\n        <table class=\\\"table table-bordered\\\" style=\\\"background-color: white\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\">Category</th>\\r\\n                <th scope=\\\"col\\\">Icon</th>\\r\\n                <th scope=\\\"col\\\">Edit</th>\\r\\n                <th scope=\\\"col\\\">Delete</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor = 'let category of categories'>\\r\\n                <th scope=\\\"row\\\">{{ category.category}}</th>\\r\\n                <td> <img src=\\\"{{ category.icon }}\\\" alt=\\\"\\\"> </td>\\r\\n                <td><button type=\\\"button\\\" nbButton (click)='onEdit(category.id)'>Edit</button></td>\\r\\n                <td><button type=\\\"button\\\" nbButton (click)='onDelete(category.id)'>Delete</button></td>\\r\\n              </tr>\\r\\n              \\r\\n            </tbody>\\r\\n          </table>\\r\\n        \\r\\n    </nb-card-body>\\r\\n  </nb-card>\"","export default \"<nb-card>\\n    <nb-card-header>Filter Professionals</nb-card-header>\\n    <nb-card-body>\\n        <label>Select Category</label>\\n        <select class=\\\"form-control\\\" (change)=\\\"onCategory($event.target.value)\\\">\\n            <option disabled>Search for a Service</option>\\n            <option [value]='0'>All Professionals</option>\\n            <option *ngFor='let category of categories' [value]='category.id'>{{ category.category }}</option>\\n        </select>\\n\\n        <br>\\n        <br>\\n\\n    </nb-card-body>\\n</nb-card>\\n\\n<nb-card>\\n    <nb-card-header>\\n        <h3> All Subcategories</h3>\\n    </nb-card-header>\\n    <nb-card-body>\\n        <table class=\\\"table table-bordered\\\" style=\\\"background-color: white\\\">\\n            <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\">Name</th>\\n                    <th scope=\\\"col\\\">Image</th>\\n                    <th scope=\\\"col\\\">Contact number 1</th>\\n                    <th scope=\\\"col\\\">Service Charge</th>\\n                    <th scope=\\\"col\\\">View</th>\\n                    <th scope=\\\"col\\\">Edit</th>\\n                    <th scope=\\\"col\\\">Delete</th>\\n                </tr>\\n            </thead>\\n            <tbody *ngIf='showProfessionals'>\\n                <tr *ngFor='let prof of showProfessionals'>\\n                    <th scope=\\\"row\\\">{{ prof.name}}</th>\\n                    <td> <img src=\\\"{{ prof.photo }}\\\" alt=\\\"\\\"> </td>\\n                    <td> {{prof.contact_number1}} </td>\\n                    <td> {{prof.service_charge}} </td>\\n                    <td><button type=\\\"button\\\" (click)='onView(prof.id)' nbButton>View</button></td>\\n                    <td><button type=\\\"button\\\" (click)='onEdit(prof.id)' nbButton>Edit</button></td>\\n                    <td><button type=\\\"button\\\" mdbWavesEffect (click)='onDelete(prof.id)' nbButton>Delete</button></td>\\n                </tr>\\n\\n            </tbody>\\n        </table>\\n    </nb-card-body>\\n</nb-card>\"","export default \"<!-- <p>all-subcategory works!</p> -->\\n<nb-card>\\n\\n  <nb-card-header>Filter Subcategories</nb-card-header>\\n  <nb-card-body>\\n      <label>Select Category</label>\\n      <select class=\\\"form-control\\\" (change)=\\\"onCategory($event.target.value)\\\">\\n          <option disabled>Search for a Service</option>\\n          <option [value]='0'>All Subcategories</option>\\n          <option *ngFor='let category of categories' [value]='category.id'>{{ category.category }}</option>\\n      </select>\\n  </nb-card-body>\\n</nb-card>\\n\\n<nb-card>\\n  <nb-card-header>\\n    <h3>Subcategories</h3>\\n  </nb-card-header>\\n  <nb-card-body>\\n    <table class=\\\"table table-bordered\\\" style=\\\"background-color: white\\\">\\n      <thead>\\n        <tr>\\n          <th scope=\\\"col\\\">ID</th>\\n          <th scope=\\\"col\\\">SubCategory</th>\\n          <th scope=\\\"col\\\">Category</th>\\n          <th scope=\\\"col\\\">Icon</th>\\n          <th scope=\\\"col\\\">Edit</th>\\n          <th scope=\\\"col\\\">Delete</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let subcategory of showsubcat'>\\n            <th scope=\\\"row\\\">{{ subcategory.id}}</th>\\n          <th scope=\\\"row\\\">{{ subcategory.subcategory}}</th>\\n          <td> {{subcategory.category.category}} </td>\\n\\n          <td> <img src=\\\"{{ subcategory.icon }}\\\" alt=\\\"\\\"> </td>\\n          <td><button type=\\\"button\\\" (click)='onEdit(subcategory.id)' nbButton>Edit</button></td>\\n          <td><button type=\\\"button\\\" (click)='onDelete(subcategory.id)' nbButton>Delete</button></td>\\n        </tr>\\n\\n      </tbody>\\n    </table>\\n\\n  </nb-card-body>\\n</nb-card>\"","export default \"<nb-card>\\n    <nb-card-header>\\n        <h3>Bulk Message</h3>\\n    </nb-card-header>\\n        <nb-card-body>\\n            <form [formGroup]=\\\"bulkMessageForm\\\" (ngSubmit)=\\\"onMessage()\\\">\\n                    <textarea nbInput fullWidth placeholder=\\\"Message\\\" formControlName='message'></textarea>\\n                    <button nbButton type=\\\"submit\\\" [disabled]='!bulkMessageForm.valid'>\\n                        Send Message\\n                    </button>\\n            </form>\\n                \\n        </nb-card-body>\\n    </nb-card>\\n    \\n    \"","export default \"<nb-card>\\n  \\n    <nb-card-header><h3> Add Category</h3></nb-card-header>\\n    <nb-card-body>\\n        <p><b>Note: </b> Icon size should of ratio: <b>137px * 137px</b></p>\\n        <p><b>Note: </b> Wallpaper size should of ratio: <b>1920px * 320px</b></p>\\n        <br>\\n  \\n  <form [formGroup]=\\\"categoryForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <label > <b> Category :</b></label> <br>\\n\\n    <input type=\\\"text\\\" nbInput placeholder=\\\"Category\\\" fullWidth  formControlName='category'>\\n    <br>\\n    <br>\\n    <label > <b> Select Icon :</b></label> <br>\\n    <input type=\\\"file\\\" nbInput  name=\\\"icon\\\" fullWidth (change)=\\\"onChange($event)\\\" />\\n    <br><br>\\n    <label > <b> Select Wallpaper :</b></label> <br>\\n    <input type=\\\"file\\\" nbInput  name=\\\"wallpaper\\\" fullWidth (change)=\\\"onWallpaper($event)\\\" />\\n    <br><br>\\n    <button type=\\\"submit\\\" nbButton [disabled]='!categoryForm.valid'>Add Category</button>\\n  </form>\\n</nb-card-body>\\n</nb-card>\"","export default \"  <div class=\\\"row\\\" *ngIf='count'>\\n      <div class=\\\"col\\\">\\n        <nb-card>\\n          <nb-card-header> ORDERS</nb-card-header>\\n          <nb-card-body>\\n            <h4>{{ count.order }}</h4>\\n          </nb-card-body>\\n        </nb-card>\\n      </div>\\n      <div class=\\\"col\\\">\\n          <nb-card>\\n            <nb-card-header > USERS</nb-card-header>\\n            <nb-card-body>\\n              <h4>{{ count.user }}</h4>\\n            </nb-card-body>\\n          </nb-card>\\n        </div>\\n      <div class=\\\"col\\\">\\n        <nb-card>\\n          <nb-card-header> PROFESSIONALS</nb-card-header>\\n          <nb-card-body>\\n            <h4>{{ count.professional }}</h4>\\n          </nb-card-body>\\n        </nb-card>\\n      </div>\\n      <div class=\\\"col\\\">\\n        <nb-card>\\n          <nb-card-header> SERVICES</nb-card-header>\\n          <nb-card-body>\\n            <h4>{{ count.services }}</h4>\\n          </nb-card-body>\\n        </nb-card>\\n      </div>\\n      \\n\\n    </div>\\n\\n<nb-card>\\n    <nb-card-body>\\n\\n        <nb-tabset fullWidth>\\n            <nb-tab tabTitle=\\\"Pending\\\">\\n\\n                <table class=\\\"table table-bordered\\\" style=\\\"background-color: white\\\">\\n                    <thead>\\n                        <tr>\\n                            <th scope=\\\"col\\\">Order Id</th>\\n                            <th scope=\\\"col\\\">subctaegory</th>\\n                            <th scope=\\\"col\\\">User's Name</th>\\n                            <th scope=\\\"col\\\">User's Contact</th>\\n                            <th scope=\\\"col\\\">Order time</th>\\n                            <th scope=\\\"col\\\">View</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor='let order of orders' >\\n                                <th scope=\\\"row\\\"  *ngIf='order.service_status == \\\"Pending\\\"'>{{ order.id}}</th>\\n                                <td *ngIf='order.service_status == \\\"Pending\\\"'> {{order.subcategory.subcategory}} </td>\\n\\n                                <td *ngIf='order.service_status == \\\"Pending\\\"'> {{order.user.name}} </td>\\n                                <td *ngIf='order.service_status == \\\"Pending\\\"'> {{order.user.phone_number}} </td>\\n                                <td *ngIf='order.service_status == \\\"Pending\\\"'> {{order.time}} </td>\\n                                <td  *ngIf='order.service_status == \\\"Pending\\\"'><button type=\\\"button\\\" nbButton (click)='onView(order.id)'>view</button> <p id=\\\"new\\\" >NEW</p></td>\\n                        </tr>\\n\\n                    </tbody>\\n                </table>\\n\\n            </nb-tab>\\n            <nb-tab tabTitle=\\\"Accepted\\\">\\n                    <table class=\\\"table table-bordered\\\" style=\\\"background-color: white\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th scope=\\\"col\\\">Order Id</th>\\n                                    <th scope=\\\"col\\\">subctaegory</th>\\n                                    <th scope=\\\"col\\\">User's Name</th>\\n                                    <th scope=\\\"col\\\">User's Contact</th>\\n                                    <th scope=\\\"col\\\">View</th>\\n                                    <th scope=\\\"col\\\">Complete</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor='let order of orders' >\\n                                        <th scope=\\\"row\\\"  *ngIf='order.service_status == \\\"Accepted\\\"'>{{ order.id}}</th>\\n                                        <td *ngIf='order.service_status == \\\"Accepted\\\"'> {{order.subcategory.subcategory}} </td>\\n                                        <td *ngIf='order.service_status == \\\"Accepted\\\"'> {{order.user.name}} </td>\\n                                        <td *ngIf='order.service_status == \\\"Accepted\\\"'> {{order.user.phone_number}} </td>\\n                                        <td *ngIf='order.service_status == \\\"Accepted\\\"'><button nbButton type=\\\"button\\\" (click)='onView(order.id)'>view</button></td>\\n                                        <td *ngIf='order.service_status == \\\"Accepted\\\"'><button nbButton type=\\\"button\\\" (click)='onComplete(order.id)'>Complete</button></td>\\n\\n                                </tr>\\n        \\n                            </tbody>\\n                        </table>\\n            </nb-tab>\\n            <nb-tab tabTitle=\\\"Completed\\\">\\n                    <table class=\\\"table table-bordered\\\" style=\\\"background-color: white\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th scope=\\\"col\\\">Order Id</th>\\n                                    <th scope=\\\"col\\\">subctaegory</th>\\n                                    <th scope=\\\"col\\\">User's Name</th>\\n                                    <th scope=\\\"col\\\">User's Contact</th>\\n                                    <th scope=\\\"col\\\">View</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor='let order of orders' >\\n                                        <th scope=\\\"row\\\"  *ngIf='order.service_status == \\\"Completed\\\"'>{{ order.id}}</th>\\n                                        <td *ngIf='order.service_status == \\\"Completed\\\"'> {{order.subcategory.subcategory}} </td>\\n                                        <td *ngIf='order.service_status == \\\"Completed\\\"'> {{order.user.name}} </td>\\n                                        <td *ngIf='order.service_status == \\\"Completed\\\"'> {{order.user.phone_number}} </td>\\n                                        <td *ngIf='order.service_status == \\\"Completed\\\"'><button nbButton type=\\\"button\\\" (click)='onView(order.id)'>View</button></td>\\n                                </tr>\\n        \\n                            </tbody>\\n                        </table>\\n            </nb-tab>\\n            <nb-tab tabTitle=\\\"Cancelled\\\">\\n                <table class=\\\"table table-bordered\\\" style=\\\"background-color: white\\\">\\n                    <thead>\\n                        <tr>\\n                            <th scope=\\\"col\\\">Order Id</th>\\n                            <th scope=\\\"col\\\">subctaegory</th>\\n                            <th scope=\\\"col\\\">User's Name</th>\\n                            <th scope=\\\"col\\\">User's Contact</th>\\n                            <th scope=\\\"col\\\">Service Status</th>\\n                            <th scope=\\\"col\\\">View</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor='let order of orders' >\\n                                <th scope=\\\"row\\\"  *ngIf='order.service_status == \\\"Cancelled\\\" || order.service_status == \\\"Declined\\\"'>{{ order.id}}</th>\\n                                <td *ngIf='order.service_status == \\\"Cancelled\\\" || order.service_status == \\\"Declined\\\"'> {{order.subcategory.subcategory}} </td>\\n                                <td *ngIf='order.service_status == \\\"Cancelled\\\" || order.service_status == \\\"Declined\\\"'> {{order.user.name}} </td>\\n                                <td *ngIf='order.service_status == \\\"Cancelled\\\" || order.service_status == \\\"Declined\\\"'> {{order.user.phone_number}} </td>\\n                                <td *ngIf='order.service_status == \\\"Cancelled\\\" || order.service_status == \\\"Declined\\\"'> {{order.service_status}} </td>\\n                                <td *ngIf='order.service_status == \\\"Cancelled\\\" || order.service_status == \\\"Declined\\\"'><button nbButton type=\\\"button\\\" (click)='onView(order.id)'>View</button></td>\\n                        </tr>\\n\\n                    </tbody>\\n                </table>\\n            </nb-tab>\\n\\n        </nb-tabset>\\n\\n    </nb-card-body>\\n</nb-card>\\n\\n\"","export default \"<nb-card *ngIf=\\\"users\\\">\\r\\n        <nb-card-header> \\r\\n           <h4> Users: {{ users.length }} </h4></nb-card-header>\\r\\n    \\r\\n        <nb-card-body >\\r\\n                <table class=\\\"table table-bordered\\\" >\\r\\n                        <thead>\\r\\n                          <tr>\\r\\n                            <th scope=\\\"col\\\">Id</th>\\r\\n                            <th scope=\\\"col\\\">Name</th>\\r\\n                            <th scope=\\\"col\\\">Contact</th>\\r\\n                            <th scope=\\\"col\\\">Joined Date</th>\\r\\n                          </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                          <tr *ngFor = 'let user of users'>\\r\\n                            <th scope=\\\"row\\\">{{ user.id}}</th>\\r\\n                            <th scope=\\\"row\\\">{{ user.name}}</th>\\r\\n                            <th scope=\\\"row\\\">{{ user.phone_number}}</th>\\r\\n                            <th scope=\\\"row\\\">{{ user.date_joined}}</th>\\r\\n                          </tr>\\r\\n                          \\r\\n                        </tbody>\\r\\n                      </table>\\r\\n        </nb-card-body>\\r\\n        \\r\\n    </nb-card>\"","export default \"<nb-card *ngIf='professional'>\\n        <nb-card-header> \\n           <h4> Professional  Id: {{ professional.id }} </h4></nb-card-header>\\n    \\n        <nb-card-body >\\n                <img src=\\\"{{ professional.photo}}\\\" alt=\\\"professional photo\\\"><br><br>\\n                <b> Name: </b> {{ professional.name }} <br> <br>\\n                <b> Service Charge: </b> {{ professional.service_charge }} <br> <br>\\n                <b> Contact Number 1: </b> {{ professional.contact_number2 }} <br> <br>\\n                <b> Conatct Number 2: </b> {{ professional.contact_number1 }} <br> <br>\\n                <b> Job Completed: </b> {{ professional.job_completed }} <br> <br>\\n                <b> Address: </b> {{ professional.address }} <br> <br>\\n                <b> Joining Date: </b> {{ professional.joining_date }} <br> <br>\\n                <b> SubCategory: </b><br> <span *ngFor='let subcat of professional.subcategory, let i=index'> {{i+1}}. {{ subcat.subcategory }} <br> </span> <br> <br>\\n\\n            </nb-card-body>\\n        \\n    </nb-card>\"","export default \"<nb-layout>\\n\\n  <nb-layout-header fixed>\\n    <h1>WOFO24</h1>\\n  </nb-layout-header>\\n\\n  <nb-layout-column>\\n    <nb-card>\\n\\n      <nb-card-header>\\n        <h2>Admin Login</h2>\\n      </nb-card-header>\\n\\n      <nb-card-body>\\n        <form [formGroup]=\\\"adminForm\\\" (ngSubmit)=\\\"onLogin()\\\" >\\n          <label><b> Admin Mobile Number:</b></label><br>\\n          <input type=\\\"text\\\" formControlName='phone_number' nbInput fullWidth> \\n          <div *ngIf=\\\"!adminForm.get('phone_number').valid && adminForm.get('phone_number').touched\\\" class=\\\"validation mt-1\\\" >Invalid Mobile Number.</div>\\n          <br> <br>\\n          <label><b> Admin Password:</b></label><br>\\n\\n          <input type=\\\"password\\\" formControlName='password' nbInput fullWidth> <br> <br>\\n          <a class='forgot' (click)='onForgot()' >Forgot Password? </a>\\n          <button type=\\\"submit\\\" nbButton style=\\\"float: right\\\" [disabled]=\\\"!adminForm.valid\\\">Login</button>\\n        </form>\\n      </nb-card-body>\\n\\n    </nb-card>\\n  </nb-layout-column>\\n</nb-layout>\"","export default \"<nb-layout>\\n\\n    <nb-layout-header fixed>\\n      <h1>WOFO24</h1>\\n    </nb-layout-header>\\n  \\n    <nb-layout-column>\\n      <nb-card>\\n  \\n        <nb-card-header>\\n          <h2>Admin Forgot Password</h2>\\n        </nb-card-header>\\n  \\n        <nb-card-body>\\n          <form [formGroup]=\\\"forgotForm\\\" (ngSubmit)=\\\"onForgot()\\\" >\\n            <label><b> Admin Mobile Number:</b></label><br>\\n            <input type=\\\"text\\\" formControlName='phone_number' nbInput fullWidth>\\n          <div *ngIf=\\\"!forgotForm.get('phone_number').valid && forgotForm.get('phone_number').touched\\\" class=\\\"validation mt-1\\\" >Invalid Mobile Number.</div>\\n          <br> <br>\\n            <button type=\\\"submit\\\" nbButton style=\\\"float: right\\\" [disabled]='!forgotForm.valid'>Send OTP</button>\\n          </form>\\n        </nb-card-body>\\n  \\n      </nb-card>\\n    </nb-layout-column>\\n  </nb-layout>\"","export default \"<nb-layout>\\n\\n    <nb-layout-header fixed>\\n      <h1>WOFO24</h1>\\n    </nb-layout-header>\\n  \\n    <nb-layout-column>\\n      <nb-card>\\n  \\n        <nb-card-header>\\n          <h2>Admin Forgot Password</h2>\\n        </nb-card-header>\\n  \\n        <nb-card-body>\\n          <form [formGroup]=\\\"resetForm\\\" (ngSubmit)=\\\"onReset()\\\" >\\n            <label><b> OTP:</b></label><br>\\n            <input type=\\\"text\\\" formControlName='otp' nbInput fullWidth> <br> <br>\\n            <label><b> New Password:</b></label><br>\\n            <input type=\\\"password\\\" formControlName='new_password' nbInput fullWidth> <br> <br>\\n            <label><b> Confirm Password:</b></label><br>\\n            <input type=\\\"password\\\" formControlName='confirm_password' nbInput fullWidth> <br> <br>\\n            <div class='validation' *ngIf=\\\" resetForm.get('confirm_password').touched && notSame\\\">\\n                Password not matching.</div>\\n            <button type=\\\"submit\\\" nbButton style=\\\"float: right\\\" [disabled]='!resetForm.valid'>Change Password</button>\\n          </form>\\n        </nb-card-body>\\n  \\n      </nb-card>\\n    </nb-layout-column>\\n  </nb-layout>\\n\\n \"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWRhc2hib2FyZC9hZGQtb3B0aW9ucy9hZGQtb3B0aW9ucy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ServerService } from 'src/app/services/server.service';\nimport { AdminServiceService } from '../../../services/admin-service.service';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { AdminAuthService } from '../../../services/admin-auth.service';\n\n@Component({\n  selector: 'app-add-options',\n  templateUrl: './add-options.component.html',\n  styleUrls: ['./add-options.component.css']\n})\nexport class AddOptionsComponent implements OnInit {\n  categories: any;\n  categoryId: any;\n  showSubcat: any;\n  options: any;\n  questions: any;\n  subcategories: any;\n  subcategoryId: any;\n  questionId: any;\n  optionForm: any;\n  questionType: any;\n  constructor(private ss: ServerService, private as: AdminServiceService, private formbuilder: FormBuilder, private aas: AdminAuthService) { }\n\n  ngOnInit() {\n\n    this.optionForm = this.formbuilder.group({\n      'question': new FormControl(null, Validators.required),\n      'choice': new FormControl(null),\n      'factor': new FormControl(null),\n      'price': new FormControl(null),\n      'category': new FormControl(null, Validators.required),\n      'subcategory': new FormControl(null, Validators.required)\n\n    });\n\n    this.ss.getCategories().subscribe(\n      res => {\n        // console.log(res);\n        this.categories = res;\n      }, err => {\n        // console.log(err)\n      }\n    )\n\n  }\n\n  onCategory(id: any) {\n    this.categoryId = id;\n\n    this.optionForm.setValue({\n      subcategory:null,\n      question:null,\n      choice:null,\n      factor:null,\n      price:null,\n      category:this.categoryId,\n      \n    })\n    this.showSubcat = null;\n    this.ss.getSubCategories(this.categoryId).subscribe(\n      res => {\n        this.showSubcat =res;\n        // console.log(this.showSubcat);\n      }, err => {\n        // console.log(err)\n      }\n    )\n  }\n\n  onSubcategory(id: any) {\n    this.subcategoryId = id;\n    this.optionForm.setValue({\n      subcategory:this.subcategoryId,\n      question:null,\n      choice:null,\n      factor:null,\n      price:null,\n      category:this.categoryId,\n      \n    })\n    // console.log(id);\n    this.questions = null;\n    this.ss.getAllQuestion(this.subcategoryId).subscribe(\n      res => {\n        // console.log(res);\n        this.questions = res;\n\n      }, err => {\n        // console.log(err);\n      }\n    )\n  }\n\n  onQuestion(id: any) {\n    this.questionId = id;\n    for (var i = 0; i < this.questions.length; i++) {\n      if (this.questions[i].id == this.questionId) {\n        // console.log(this.questions[i].id);\n        // console.log(this.questions[i].select_type);\n        this.questionType = this.questions[i].select_type;\n      }\n    }\n    this.optionForm.setValue({\n      subcategory:this.subcategoryId,\n      question:this.questionId,\n      choice:null,\n      factor:null,\n      price:null,\n      category:this.categoryId,\n      \n    })\n    this.as.getOption(this.questionId).subscribe(\n      res => {\n        // console.log(res);\n        this.options = res;\n      }, err => {\n        // console.log(err);\n      }\n    )\n  }\n\n  onOptions() {\n    if (this.questionType == 'form') {\n      const option = {\n        'question': parseInt(this.optionForm.value.question),\n        'choice': this.optionForm.value.choice,\n        'factor': this.optionForm.value.factor,\n        'price': this.optionForm.value.price,\n\n      }\n      // console.log(option)\n      this.as.postValueOption(this.aas.getAdminAccessToken(), option).subscribe(\n        res => {\n          // console.log(res);\n          this.optionForm.reset();\n        }, err => {\n          // console.log(err);\n        }\n      )\n\n    }\n    else {\n      const option = {\n        'question': parseInt(this.optionForm.value.question),\n        'choice': this.optionForm.value.choice\n      }\n      // console.log(option)\n      this.aas.isLoggedIn();\n      this.as.postOption(this.aas.getAdminAccessToken(), option).subscribe(\n        res => {\n          // console.log(res);\n          this.optionForm.reset();\n        }, err => {\n          // console.log(err);\n        }\n      )\n\n    }\n  }\n\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWRhc2hib2FyZC9hZGQtcHJvZmVzc2lvbmFsL2FkZC1wcm9mZXNzaW9uYWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ServerService } from 'src/app/services/server.service';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { AdminAuthService } from '../../../services/admin-auth.service';\nimport { AdminServiceService } from '../../../services/admin-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-add-professional',\n  templateUrl: './add-professional.component.html',\n  styleUrls: ['./add-professional.component.css']\n})\nexport class AddProfessionalComponent implements OnInit {\n  professionalForm: FormGroup;\n  subcategories: any;\n  file: any;\n  set = new Set();\n  selectedOption: any = [];\n  professionalId: any;\n  professional: any;\n  checkMap = new Map();\n  constructor(private ss: ServerService, private formbuilder: FormBuilder, private aas: AdminAuthService, private as: AdminServiceService, private activeRoute: ActivatedRoute,\n    private route:Router) { }\n\n  ngOnInit() {\n    this.professionalForm = this.formbuilder.group({\n      'subcategory': new FormControl(null, Validators.required),\n      'professional': new FormControl(null, Validators.required),\n      'service_charge': new FormControl(null),\n      'contact_number1': new FormControl(null, Validators.required),\n      'contact_number2': new FormControl(''),\n      'address': new FormControl(null, Validators.required)\n    });\n\n    this.activeRoute.params.subscribe(params => {\n      // console.log(params['id']);\n      this.professionalId = params['id'];\n    })\n\n    this.ss.getAllSubCategories().subscribe(\n      res => {\n        // console.log(res);\n        this.subcategories = res;\n        for (var j = 0; j < this.subcategories.length; j++) {\n          this.checkMap.set(this.subcategories[j].id, false);\n        }\n      }, err => {\n        // console.log(err)\n      }\n    )\n\n    if (this.professionalId) {\n\n\n      this.as.getProfessional(this.aas.getAdminAccessToken(), this.professionalId).subscribe(\n        res => {\n          this.professional = res;\n          this.professionalForm.setValue({\n            subcategory: null,\n            professional: this.professional.name,\n            service_charge: this.professional.service_charge,\n            contact_number1: this.professional.contact_number1,\n            contact_number2: this.professional.contact_number2,\n            address: this.professional.address,\n          })\n          this.set = new Set();\n          for (var j = 0; j < this.professional.subcategory.length; j++) {\n            this.checkMap.set(this.professional.subcategory[j].id, true);\n            this.set.add(this.professional.subcategory[j].id)\n          }\n        }, err => {\n          // console.log(err)\n        }\n      )\n    }\n  }\n\n\n  onSubcat(value: any) {\n    value = parseInt(value)\n    // console.log(this.professionalForm.value.subcategory);\n    this.selectedOption = []\n    // console.log(this.set);\n    if (this.set.has(value)) {\n      this.set.delete(value);\n    }\n    else {\n      this.set.add(value);\n    }\n    // console.log(this.set);\n    for (var x of Array.from(this.set.values())) {\n      for (var i = 0; i < this.subcategories.length; i++) {\n        if (x == this.subcategories[i].id)\n          this.selectedOption.push(this.subcategories[i].id);\n      }\n    }\n    // console.log(this.selectedOption);\n    return 0;\n\n  }\n\n  onChange(event: any) {\n    if (event.target.files.length > 0) {\n      this.file = event.target.files[0];\n    }\n  }\n\n  onProfessionals() {\n    this.aas.isLoggedIn();\n    if (this.professionalId) {\n      // console.log(this.selectedOption)\n      const formData = new FormData();\n      if (this.file) {\n        formData.append('photo', this.file);\n        formData.append('subcategory_list', this.selectedOption);\n        formData.append('name', this.professionalForm.value.professional);\n        formData.append('address', this.professionalForm.value.address);\n        formData.append('service_charge', this.professionalForm.value.service_charge);\n        formData.append('contact_number1', this.professionalForm.value.contact_number1);\n        formData.append('contact_number2', this.professionalForm.value.contact_number2);\n      } else {\n        // console.log(this.selectedOption)\n        formData.append('subcategory_list', this.selectedOption);\n        formData.append('name', this.professionalForm.value.professional);\n        formData.append('address', this.professionalForm.value.address);\n        formData.append('service_charge', this.professionalForm.value.service_charge);\n        formData.append('contact_number1', this.professionalForm.value.contact_number1);\n        formData.append('contact_number2', this.professionalForm.value.contact_number2);\n      }\n\n\n      this.as.updateProfessional(this.aas.getAdminAccessToken(), this.professionalId, formData).subscribe(\n        res => {\n          // console.log(res);\n          this.route.navigate(['../../professionals'],{relativeTo:this.activeRoute})\n        }, err => {\n          // console.log(err)\n        }\n      )\n\n\n    } else {\n      const formData = new FormData();\n      formData.append('photo', this.file);\n      formData.append('subcategory_list', this.selectedOption);\n      formData.append('name', this.professionalForm.value.professional);\n      formData.append('address', this.professionalForm.value.address);\n      formData.append('service_charge', this.professionalForm.value.service_charge);\n      formData.append('contact_number1', this.professionalForm.value.contact_number1);\n      formData.append('contact_number2', this.professionalForm.value.contact_number2);\n      \n\n      this.as.postProfessionals(this.aas.getAdminAccessToken(), formData).subscribe(\n        res => {\n          // console.log(res);\n          this.route.navigate(['../professionals'],{relativeTo:this.activeRoute});\n        }, err => {\n          // console.log(err)\n        }\n      )\n    }\n\n\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWRhc2hib2FyZC9hZGQtcXVlc3Rpb25zL2FkZC1xdWVzdGlvbnMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ServerService } from 'src/app/services/server.service';\nimport { AdminServiceService } from '../../../services/admin-service.service';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { AdminAuthService } from '../../../services/admin-auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-add-questions',\n  templateUrl: './add-questions.component.html',\n  styleUrls: ['./add-questions.component.css']\n})\nexport class AddQuestionsComponent implements OnInit {\n  categories: any;\n  subcategories: any;\n  categoryId: any;\n  showSubcat: any;\n  subcategoryId: any;\n  questions: any;\n  questionId:any;\n  options:any;\n  selectedOption:any;\n  set = new Set();\n  required = false;\n  questionForm: FormGroup\n  constructor(private ss: ServerService, private as:AdminServiceService, private formbuilder:FormBuilder, private aas:AdminAuthService, private route:Router, private activeRoute:ActivatedRoute) { \n    \n  }\n\n  ngOnInit() {\n\n    this.questionForm = new FormGroup({\n      'question': new FormControl(null, Validators.required),\n      'required': new FormControl(false),\n      'select_type': new FormControl(null, Validators.required),\n      'parent_question': new FormControl(null),\n      'parent_option': new FormControl(null),\n      'category': new FormControl(null, Validators.required),\n      'subcategory': new FormControl(null, Validators.required)\n    });\n    \n   \n\n    this.ss.getCategories().subscribe(\n      res => {\n        // console.log(res);\n        this.categories = res;\n        \n      }, err => {\n        // console.log(err)\n      }\n    )\n\n\n  }\n\n  onCategory(id: any) {\n    this.options  = null;\n    this.categoryId = id;\n\n    this.questionForm.setValue({\n      subcategory:null,\n      question:null,\n      required:false,\n      select_type:null,\n      parent_question:null,\n      parent_option:null,\n      category:this.categoryId,\n      \n    })\n    // console.log(id)\n    this.showSubcat=null;\n    this.ss.getSubCategories(this.categoryId).subscribe(\n      res => {\n        this.showSubcat =res;\n        // console.log(this.showSubcat);\n      }, err => {\n        // console.log(err)\n      }\n    )\n    \n  }\n\n  onSubcategory(id: any) {\n    this.subcategoryId = id;\n    this.options = [];\n    // console.log(id);\n    this.questionForm.setValue({\n      parent_question:null,\n      subcategory:this.subcategoryId,\n      question:null,\n      required:false,\n      select_type:null,\n      parent_option:null,\n      category:this.categoryId,\n\n    })\n    this.questions = null;\n    this.ss.getAllQuestion(this.subcategoryId).subscribe(\n      res => {\n        // console.log(res);\n        this.questions = res;\n      }, err => {\n        // console.log(err);\n      }\n    )\n  }\n\n  onQuestion(id:any){\n    this.questionId = id;\n    // console.log(this.questionId)\n    this.questionForm.setValue({\n      question:null,\n      subcategory:this.subcategoryId,\n      required:false,\n      select_type:null,\n      parent_question:this.questionId,\n      parent_option:null,\n      category:this.categoryId,\n\n    })\n    // console.log(this.questionId)\n    \n    this.as.getOption(this.questionId).subscribe(\n      res => {\n        // console.log(res);\n        this.options = res;\n        \n        \n      }, err => {\n        // console.log(err);\n      }\n    )\n  }\n\n  onoption(value:any){\n    value = parseInt(value)\n    this.selectedOption = []\n    if (this.set.has(value)) {\n      this.set.delete(value);\n    }\n    else {\n      this.set.add(value);\n    }\n    // console.log(this.set);\n    for (var x of Array.from(this.set.values())) {\n      for (var i = 0; i < this.options.length; i++) {\n        if (x == this.options[i].id)\n          this.selectedOption.push(this.options[i].id);\n      }\n    }\n    // console.log(this.selectedOption);\n    return 0;\n  }\n\n\n\n  toggle(required: boolean) {\n    this.required = required;\n  }\n\n  onquestions(){\n    this.aas.isLoggedIn();\n    this.questionForm.value.parent_option = JSON.stringify(this.selectedOption) ;\n    // console.log(this.questionForm.value);\n    this.as.postQuestion(this.aas.getAdminAccessToken(),this.questionForm.value).subscribe(\n      res => {\n        // console.log(res);\n        this.route.navigate(['../add-option'],{relativeTo:this.activeRoute})\n      }, err => {\n        // console.log(err)\n      }\n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWRhc2hib2FyZC9hZGQtc3ViY2F0ZWdvcnkvYWRkLXN1YmNhdGVnb3J5LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ServerService } from 'src/app/services/server.service';\nimport { AdminServiceService } from '../../../services/admin-service.service';\nimport { AdminAuthService } from '../../../services/admin-auth.service';\n\n@Component({\n  selector: 'app-add-subcategory',\n  templateUrl: './add-subcategory.component.html',\n  styleUrls: ['./add-subcategory.component.css']\n})\nexport class AddSubcategoryComponent implements OnInit {\n  subcategoryForm:FormGroup;\n  subcategoryId:any;\n  subcategories:any;\n  categories:any;\n  file:any;\n  constructor(private formbuilder:FormBuilder, private activeRoute:ActivatedRoute, private ss:ServerService, private as:AdminServiceService, private aas:AdminAuthService,\n    private route:Router) { }\n\n  ngOnInit() {\n    this.subcategoryForm = this.formbuilder.group({\n      'subcategory': new FormControl(null, Validators.required),\n      'category':new FormControl(null,Validators.required)\n    });\n\n    this.activeRoute.params.subscribe(params => {\n      // console.log(params['id']);\n      this.subcategoryId = params['id'];\n    })\n\n    this.ss.getCategories().subscribe(\n      res => {\n        // console.log(res)\n        this.categories = res;\n      }, err => {\n        // console.log(err);\n      }\n    )\n\n    this.ss.getAllSubCategories().subscribe(\n      res => {\n        // console.log(res)\n        this.subcategories = res;\n        for (var i = 0; i < this.subcategories.length; i++) {\n          if (this.subcategories[i].id == this.subcategoryId) {\n            this.subcategoryForm.setValue({\n              category: this.subcategories[i].category.id,\n              subcategory: this.subcategories[i].subcategory,\n\n            })\n          }\n        }\n      }, err => {\n        // console.log(err);\n      }\n    )\n  }\n\n  onChange(event) {\n    if (event.target.files.length > 0) {\n      this.file = event.target.files[0];\n    }\n  }\n\n  onSubmit() {\n    this.aas.isLoggedIn();\n\n    if (this.subcategoryId) {\n\n            this.as.updateSubCategory(this.aas.getAdminAccessToken(),this.file, this.subcategoryForm.value.category,this.subcategoryForm.value.subcategory,this.subcategoryId).subscribe(\n              (res) => {\n                // console.log(res);\n                this.route.navigate(['../../allSubcategory'],{relativeTo:this.activeRoute})\n              },\n              (err) => {\n                // console.log(err)\n              })\n    \n    \n          } else {\n            this.as.postSubCategory(this.aas.getAdminAccessToken(),this.file, this.subcategoryForm.value.category,this.subcategoryForm.value.subcategory).subscribe(\n              (res) => {\n                // console.log(res);\n                this.route.navigate(['../allSubcategory'],{relativeTo:this.activeRoute})\n              },\n              (err) => {\n                // console.log(err)\n              })\n          }\n   \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWRhc2hib2FyZC9hZG1pbi1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\nimport { AdminAuthService } from 'src/app/services/admin-auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n  items = [\n    {\n      title: 'Order Status',\n      link: './'\n\n    },\n    {\n      title: 'Users',\n      link: 'users'\n    },\n    {\n      title: 'Category',\n      children:[\n        {title : 'Add category',\n          link: 'category'},\n        {title : 'All category',\n          link:'allCategory'  },\n      ],\n      \n    },\n    {\n      title: 'Subcategory',\n      children:[\n        {title : 'Add subcategory',\n          link: 'subcategory' },\n        {title : 'All subcategory',\n          link:'allSubcategory'  },\n      ],\n      \n    },\n    {\n      title: 'Professional',\n      children:[\n        {title : 'Add Professional',\n          link: 'addProfessional' },\n        {title : 'All professional',\n          link:'professionals'  },\n      ],\n      \n    },\n    {\n      title: 'Add Question',\n      link: 'add-question'\n    },\n    {\n      title: 'Add Options',\n      link: 'add-option'\n    },\n    {\n      title: 'Bulk Message',\n      link: 'bulk-message'\n    },\n  ];\n  count:any;\n  constructor( private aas:AdminAuthService, private route:Router) { }\n\n  ngOnInit() {\n    \n  }\n\n  onLogout(){\n    this.aas.removeAdminAccessToken();\n    this.aas.removeAdminRefreshToken();\n    this.route.navigate(['../'])\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWRhc2hib2FyZC9hZG1pbi1vcmRlci1kZXRhaWxzL2FkbWluLW9yZGVyLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AdminServiceService } from '../../../services/admin-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AdminAuthService } from '../../../services/admin-auth.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-admin-order-details',\n  templateUrl: './admin-order-details.component.html',\n  styleUrls: ['./admin-order-details.component.css'],\n})\nexport class AdminOrderDetailsComponent implements OnInit {\n  orders:any;\n  orderId:any;\n  professionals:any;\n  option:any;\n  constructor(private as:AdminServiceService,private activeRoute:ActivatedRoute, private aas:AdminAuthService, private route:Router) { }\n\n  ngOnInit() {\n    \n\n    this.activeRoute.params.subscribe(params => {\n      // console.log(params['id']);\n      this.orderId = params['id'];\n    });\n\n    this.as.getSpecificOrder(this.aas.getAdminAccessToken(),this.orderId).subscribe(\n      res => {\n        // console.log(res);\n        this.orders = res;\n        this.as.getSubCatProfessional(this.aas.getAdminAccessToken(),this.orders[0].subcategory.id).subscribe(\n          res2 =>{\n            // console.log(res2);\n            this.professionals = res2;\n          }, err2 => {\n            // console.log(err2)\n          }\n        )\n      }, err => {\n        // console.log(err);\n      }\n    )\n    \n      \n    \n    \n  }\n\n  onView(id:any){\n    this.route.navigate(['../../professionals/'+id],{relativeTo: this.activeRoute})\n  }\n\n  onAccept(order_id:any){\n    this.aas.isLoggedIn();\n\n    // console.log(this.option)\n    const accepted={\n      'service_status':'Accepted',\n      'professional_assigned': this.option\n    }\n    this.as.updateStatus(this.aas.getAdminAccessToken(),order_id,accepted).subscribe(\n      res => {\n        // console.log(res);\n        this.route.navigate(['../../'],{relativeTo:this.activeRoute})\n      }, err => {\n        // console.log(err)\n      }\n    )\n  }\n\n  onDecline(order_id:any){\n    this.aas.isLoggedIn();\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Are you sure you want to cancel the booking?\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor:  '#d33',\n      cancelButtonColor: '#F7BE52',\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No'\n    }).then((result)=> {\n      if(result.value){\n        const declined={\n          'service_status':'Declined'\n        }\n        this.as.updateStatus(this.aas.getAdminAccessToken(),order_id,declined).subscribe(\n          res => {\n            // console.log(res);\n            this.route.navigate(['../../'],{relativeTo:this.activeRoute})\n          }, err => {\n            // console.log(err)\n          }\n        )\n      }\n    })\n\n   \n  }\n\n  onComplete(order_id:any){\n    this.aas.isLoggedIn();\n\n    const completed={\n      'service_status':'Completed',\n      'payment_status':true\n    }\n    this.as.updateStatus(this.aas.getAdminAccessToken(),order_id,completed).subscribe(\n      res => {\n        // console.log(res);\n        this.route.navigate(['../../'],{relativeTo:this.activeRoute})\n      }, err => {\n        // console.log(err)\n      }\n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWRhc2hib2FyZC9hbGwtY2F0ZWdvcnkvYWxsLWNhdGVnb3J5LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ServerService } from 'src/app/services/server.service';\nimport { AdminServiceService } from '../../../services/admin-service.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdminAuthService } from '../../../services/admin-auth.service';\n\n@Component({\n  selector: 'app-all-category',\n  templateUrl: './all-category.component.html',\n  styleUrls: ['./all-category.component.css']\n})\nexport class AllCategoryComponent implements OnInit {\n  categories:any;\n  constructor(private ss:ServerService, private as:AdminServiceService, private route:Router,private activeRoute:ActivatedRoute,private aas:AdminAuthService) { }\n\n  ngOnInit() {\n    this.ss.getCategories().subscribe(\n      res=> {\n        // console.log(res);\n        this.categories =res;\n      }, err=>{\n        // console.log(err)\n      }\n    )\n  }\n\n  onDelete(id:any){\n    this.as.deleteCategory(this.aas.getAdminAccessToken(),id).subscribe(\n      res=>{\n        // console.log(res);\n        this,this.ngOnInit();\n      },err=> {\n        // console.log(err)\n      }\n    )\n  }\n\n  onEdit(id:any){\n    this.route.navigate(['../category', id ],{relativeTo: this.activeRoute})\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWRhc2hib2FyZC9hbGwtcHJvZmVzc2lvbmFsL2FsbC1wcm9mZXNzaW9uYWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ServerService } from 'src/app/services/server.service';\nimport { AdminServiceService } from '../../../services/admin-service.service';\nimport { AdminAuthService } from '../../../services/admin-auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-all-professional',\n  templateUrl: './all-professional.component.html',\n  styleUrls: ['./all-professional.component.css']\n})\nexport class AllProfessionalComponent implements OnInit {\n  professionals: any\n  showSubcat: any;\n  categoryId: any;\n  categories: any;\n  showProfessionals: any[] = [];\n  noProfessional = false;\n\n  constructor(private ss: ServerService, private as: AdminServiceService, private aas: AdminAuthService, private route: Router, private activeRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.ss.getprofessionals().subscribe(\n      res => {\n        // console.log(res);\n        this.professionals = res;\n        for (var i = 0; i < this.professionals.length; i++) {\n          this.showProfessionals.push(this.professionals[i]);\n        }\n      }, err => {\n        // console.log(err)\n      }\n    )\n\n    this.ss.getCategories().subscribe(\n      res => {\n        // console.log(res)\n        this.categories = res;\n      }, err => {\n        // console.log(err)\n      }\n    )\n  }\n\n  onDelete(id: any) {\n    // console.log(id);\n    this.as.deleteProfessionals(this.aas.getAdminAccessToken(), id).subscribe(\n      res => {\n        // console.log(res);\n        this.ngOnInit();\n      }, err => {\n        // console.log(err)\n      }\n    )\n  }\n\n  onView(id: any) {\n    this.route.navigate(['../professionals/' + id], { relativeTo: this.activeRoute })\n  }\n\n  onEdit(id: any) {\n    this.route.navigate(['../addProfessional/' + id], { relativeTo: this.activeRoute })\n  }\n  onCategory(id: any) {\n\n    this.showProfessionals = [];\n    if (id != 0) {\n      this.categoryId = id;\n      for (var i = 0; i < this.professionals.length; i++) {\n        for (var j = 0; j < this.professionals[i].subcategory.length; j++) {\n          if (this.professionals[i].subcategory[j].category.id == this.categoryId) {\n            this.showProfessionals.push(this.professionals[i]);\n            break;\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < this.professionals.length; i++) {\n        for (var j = 0; j < this.professionals[i].subcategory.length; j++) {\n          this.showProfessionals.push(this.professionals[i]);\n          break;\n        }\n      }\n    }\n    // console.log(this.showProfessionals)\n    if(this.showProfessionals.length == 0){\n      this.noProfessional = true;\n    }else{\n      this.noProfessional = false\n    }\n  }\n\n  \n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWRhc2hib2FyZC9hbGwtc3ViY2F0ZWdvcnkvYWxsLXN1YmNhdGVnb3J5LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ServerService } from 'src/app/services/server.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdminServiceService } from '../../../services/admin-service.service';\nimport { AdminAuthService } from '../../../services/admin-auth.service';\n\n@Component({\n  selector: 'app-all-subcategory',\n  templateUrl: './all-subcategory.component.html',\n  styleUrls: ['./all-subcategory.component.css']\n})\nexport class AllSubcategoryComponent implements OnInit {\n  subcategories: any;\n  showsubcat: any[]=[];\n  subcat: any;\n  categories:any;\n  constructor(private ss: ServerService, private route: Router, private activeRoute: ActivatedRoute, private as: AdminServiceService, private aas: AdminAuthService) { }\n\n  ngOnInit() {\n    this.ss.getCategories().subscribe(\n      res => {\n        // console.log(res);\n        this.categories = res;\n      }, err => {\n        // console.log(err)\n      }\n    )\n\n    this.ss.getAllSubCategories().subscribe(\n      res => {\n        // console.log(res);\n        this.subcategories = res;\n        for (var i = 0; i < this.subcategories.length; i++) {\n          this.showsubcat.push(this.subcategories[i]);\n        }\n      }, err => {\n        // console.log(err)\n      }\n    )\n  }\n\n  onDelete(id: any) {\n    this.as.deleteSubCategory(this.aas.getAdminAccessToken(), id).subscribe(\n      res => {\n        // console.log(res);\n        this.ngOnInit();\n      }, err => {\n        // console.log(err)\n      }\n    )\n  }\n\n  onEdit(id: any) {\n    this.route.navigate(['../subcategory', id], { relativeTo: this.activeRoute })\n  }\n\n  onCategory(id: any) {\n    this.showsubcat = [];\n    if (id != 0) {\n      this.ss.getSubCategories(id).subscribe(\n        res => {\n          // console.log(res);\n          this.subcat = res;\n          for (var i = 0; i < this.subcat.length; i++) {\n            this.showsubcat.push(this.subcat[i]);\n          }\n        }, err => {\n          // console.log(err)\n        }\n      )\n    } else {\n      for (var i = 0; i < this.subcategories.length; i++) {\n        this.showsubcat.push(this.subcategories[i]);\n      }\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWRhc2hib2FyZC9idWxrLW1lc3NhZ2UvYnVsay1tZXNzYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AdminAuthService } from '../../../services/admin-auth.service';\nimport { AdminServiceService } from '../../../services/admin-service.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-bulk-message',\n  templateUrl: './bulk-message.component.html',\n  styleUrls: ['./bulk-message.component.css']\n})\nexport class BulkMessageComponent implements OnInit {\n  bulkMessageForm:FormGroup;\n  constructor(private aas:AdminAuthService,private as:AdminServiceService,private route:Router, private formbuilder:FormBuilder, private activeRoute:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.bulkMessageForm = this.formbuilder.group({\n      'message': new FormControl(null, Validators.required),\n    });\n  }\n\n  onMessage(){\n    this.aas.isLoggedIn();\n\n    this.as.postMessage(this.aas.getAdminAccessToken(),this.bulkMessageForm.value).subscribe(\n      res => {\n        // console.log(res);\n        this.route.navigate(['../'],{relativeTo: this.activeRoute})\n      }, err => {\n        // console.log(err)\n      }\n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWRhc2hib2FyZC9jcmVhdGUtY2F0ZWdvcnkvY3JlYXRlLWNhdGVnb3J5LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ServerService } from 'src/app/services/server.service';\nimport { AdminServiceService } from '../../../services/admin-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AdminAuthService } from '../../../services/admin-auth.service';\n\nclass ImageSnippet {\n  constructor(public src: string, public file: File) { }\n}\n\n@Component({\n  selector: 'app-create-category',\n  templateUrl: './create-category.component.html',\n  styleUrls: ['./create-category.component.css']\n})\nexport class CreateCategoryComponent implements OnInit {\n  categoryForm: FormGroup;\n  file: File;\n  reader: any\n  selectedFile: ImageSnippet;\n  categoryId: any;\n  categories: any;\n  wallpaper:File;\n  constructor(private formbuilder: FormBuilder, public as: AdminServiceService, private ss: ServerService, private activeRoute: ActivatedRoute\n ,private aas:AdminAuthService, private route:Router ) { }\n\n  ngOnInit() {\n    this.categoryForm = this.formbuilder.group({\n      'category': new FormControl(null, Validators.required),\n    });\n\n    this.activeRoute.params.subscribe(params => {\n      // console.log(params['id']);\n      this.categoryId = params['id'];\n    })\n\n    this.ss.getCategories().subscribe(\n      res => {\n        // console.log(res)\n        this.categories = res;\n        for (var i = 0; i < this.categories.length; i++) {\n          if (this.categories[i].id == this.categoryId) {\n            this.categoryForm.setValue({\n              category: this.categories[i].category,\n            })\n          }\n        }\n      }, err => {\n        // console.log(err);\n      }\n    )\n  }\n\n\n  onChange(event) {\n    if (event.target.files.length > 0) {\n      this.file = event.target.files[0];\n    }\n  }\n\n  onWallpaper(event){\n    if (event.target.files.length > 0) {\n      this.wallpaper = event.target.files[0];\n    }\n  }\n\n  onSubmit() {\n    this.aas.isLoggedIn();\n\n    if (this.categoryId) {\n\n            this.as.updateCategory(this.aas.getAdminAccessToken(),this.file, this.categoryForm.value.category,this.wallpaper, this.categoryId).subscribe(\n              (res) => {\n                // console.log(res);\n                this.route.navigate(['../../allCategory'], {relativeTo:this.activeRoute})\n              },\n              (err) => {\n                // console.log(err)\n              })\n    \n    \n          } else {\n            this.as.postCategory(this.aas.getAdminAccessToken(),this.file, this.categoryForm.value.category, this.wallpaper).subscribe(\n              (res) => {\n                // console.log(res);\n                this.route.navigate(['../allCategory'], {relativeTo:this.activeRoute})\n\n              },\n              (err) => {\n                // console.log(err)\n              })\n          }\n   \n  }\n\n\n\n \n\n}\n\n","export default \":host nb-tab {\\n    padding: 1.25rem;\\n  }\\n\\n#new{\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYWRtaW4tZGFzaGJvYXJkL29yZGVycy9vcmRlcnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtFQUNsQjs7QUFFRjtFQUNFLGFBQWE7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWRhc2hib2FyZC9vcmRlcnMvb3JkZXJzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCBuYi10YWIge1xuICAgIHBhZGRpbmc6IDEuMjVyZW07XG4gIH1cblxuI25ld3tcbiAgZGlzcGxheTogbm9uZTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AdminServiceService } from '../../../services/admin-service.service';\nimport { AdminAuthService } from '../../../services/admin-auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { ToastrService } from 'ngx-toastr';\n\n\ndeclare var channels: any;\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n  orders: any[] = [];\n  professionals: any;\n  coming: any;\n  count:any;\n  Toast = Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 3000000\n  })\n  constructor(private as: AdminServiceService, private aas: AdminAuthService, private route: Router, private activeRoute: ActivatedRoute, private toastr: ToastrService) {\n  }\n\n  ngOnInit() {\n\n    this.as.getAdminCount().subscribe(\n      res => {\n        this.count = res;\n        // console.log(this.count);\n      }, err => {\n        // console.log(err);\n      }\n    )\n\n    const x = new channels.WebSocketBridge();\n    const y = new channels.WebSocketBridge();\n\n    x.connect('wss://wofo24.com:8443/pending/');\n    y.connect('wss://wofo24.com:8443/admin_update/');\n\n    \n    // console.log(x);\n    // console.log(this.orders);\n    x.listen((action: any) => {\n      // console.log('RESPONSE:', action)\n      this.orders.unshift(action);\n      // console.log(this.orders);\n      this.count.order = this.count.order + 1;\n      this.toastr.success('Incoming Booking','Order Id '+ action.id ,{ positionClass: 'toast-bottom-right', timeOut:3000000 });\n\n      // this.Toast.fire({\n      //   type: 'success',\n      //   title: 'New Order' + action.id \n      // })\n    })\n\n    y.listen((action: any) => {\n      // console.log('RESPONSE2:', action)\n      for(var i=0;i<this.orders.length;i++){\n        if(this.orders[i].id == action.id){\n          this.orders[i].service_status = action.service_status;\n          break;\n        }\n      }\n      this.toastr.error('Order cancelled','Order Id '+ action.id ,{ positionClass: 'toast-bottom-right', timeOut:3000000 });\n\n    })\n    \n\n    this.as.getOrders(this.aas.getAdminAccessToken()).subscribe(\n      res => {\n        // console.log(res)\n        this.orders = [];\n        this.coming = res;\n        for (var i = 0; i < this.coming.length; i++) {\n          this.orders.push(this.coming[i])\n        }\n\n      }, err => {\n        // console.log(err)\n      }\n    )\n  }\n\n  onView(order_id: any) {\n    this.route.navigate(['order-deatils/' + order_id], { relativeTo: this.activeRoute })\n  }\n\n  onAccept(order_id: any) {\n    this.aas.isLoggedIn();\n\n    const accepted = {\n      'service_status': 'Accepted'\n    }\n    this.as.updateStatus(this.aas.getAdminAccessToken(), order_id, accepted).subscribe(\n      res => {\n        // console.log(res)\n        this.ngOnInit();\n      }, err => {\n        // console.log(err)\n      }\n    )\n  }\n\n  onDecline(order_id: any) {\n    this.aas.isLoggedIn();\n\n    const cancelled = {\n      'service_status': 'Cancelled'\n    }\n    this.as.updateStatus(this.aas.getAdminAccessToken(), order_id, cancelled).subscribe(\n      res => {\n        // console.log(res)\n        this.ngOnInit();\n      }, err => {\n        // console.log(err)\n      }\n    )\n  }\n\n  onComplete(order_id: any) {\n    this.aas.isLoggedIn();\n\n    const completed = {\n      'service_status': 'Completed',\n      'payment_status': true\n    }\n    this.as.updateStatus(this.aas.getAdminAccessToken(), order_id, completed).subscribe(\n      res => {\n        // console.log(res)\n        this.ngOnInit();\n      }, err => {\n        // console.log(err)\n      }\n    )\n  }\n\n\n\n\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWRhc2hib2FyZC91c2Vycy91c2Vycy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AdminServiceService } from '../../../services/admin-service.service';\nimport { AdminAuthService } from '../../../services/admin-auth.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  users:any;\n  constructor(private as:AdminServiceService, private aas:AdminAuthService) { }\n\n  ngOnInit() {\n    this.as.getUsers(this.aas.getAdminAccessToken()).subscribe(\n      res => {\n        // console.log(res);\n        this.users = res;\n        // console.log(this.users)\n      }, err => {\n        // console.log(err)\n      }\n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWRhc2hib2FyZC92aWV3LXByb2Zlc3Npb25hbHMvdmlldy1wcm9mZXNzaW9uYWxzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AdminServiceService } from '../../../services/admin-service.service';\nimport { ServerService } from 'src/app/services/server.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AdminAuthService } from '../../../services/admin-auth.service';\n\n@Component({\n  selector: 'app-view-professionals',\n  templateUrl: './view-professionals.component.html',\n  styleUrls: ['./view-professionals.component.css']\n})\nexport class ViewProfessionalsComponent implements OnInit {\n  professionalId:any;\n  professional:any;\n  constructor(private as:AdminServiceService, private ss:ServerService,private activeRoute:ActivatedRoute, private aas:AdminAuthService) { }\n\n  ngOnInit() {\n\n    this.activeRoute.params.subscribe(params => {\n      // console.log(params['id']);\n      this.professionalId = params['id'];\n    });\n\n\n    this.as.getProfessional(this.aas.getAdminAccessToken(),this.professionalId).subscribe(\n      res =>{\n        // console.log(res);\n        this.professional = res;\n        // console.log(this.professional)\n      }, err => {\n        // console.log(err)\n      }\n    )\n  }\n\n}\n","export default \"nb-card {\\n    margin: 1rem 30rem;\\n  }\\n\\n.forgot{\\n    cursor: pointer;\\n    font-size: 0.8rem\\n}\\n\\n.validation{\\n    color:red;\\n    font-size: 0.8rem;\\n    margin-left: 0rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYWRtaW4tbG9naW4vYWRtaW4tbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtFQUNwQjs7QUFFRjtJQUNJLGVBQWU7SUFDZjtBQUNKOztBQUNBO0lBQ0ksU0FBUztJQUNULGlCQUFpQjtJQUNqQixpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9hZG1pbi1sb2dpbi9hZG1pbi1sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibmItY2FyZCB7XG4gICAgbWFyZ2luOiAxcmVtIDMwcmVtO1xuICB9XG5cbi5mb3Jnb3R7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGZvbnQtc2l6ZTogMC44cmVtXG59XG4udmFsaWRhdGlvbntcbiAgICBjb2xvcjpyZWQ7XG4gICAgZm9udC1zaXplOiAwLjhyZW07XG4gICAgbWFyZ2luLWxlZnQ6IDByZW07XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { AdminServiceService } from '../../services/admin-service.service';\nimport { AdminAuthService } from '../../services/admin-auth.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n  adminForm:FormGroup;\n  admin:any;\n  numberFormat = '[6-9][0-9]{9}';\n\n  constructor(private formbuilder:FormBuilder, private as:AdminServiceService, private aas:AdminAuthService, private route:Router) {\n    \n    if(this.aas.isLoggedIn()){\n      this.route.navigate(['/'])\n    }\n   }\n\n  ngOnInit() {\n    this.adminForm = this.formbuilder.group({\n      'phone_number': new FormControl(null, Validators.compose([Validators.required,Validators.pattern(this.numberFormat)])),\n        'password':new FormControl(null, Validators.required)\n    });\n  }\n\n  onLogin(){\n    this.as.postAdminLogin(this.adminForm.value).subscribe(\n      res=>{\n        // console.log(res);\n        this.admin = res;\n        this.aas.storeAdminAccessToken(this.admin.access);\n        this.aas.storeAdminRefreshToken(this.admin.refresh);\n        this.adminForm.reset();\n        this.route.navigate(['admin','admin-dashboard'])\n\n      },err => {\n        // console.log(err);\n        if(err.error.error == \"Entry restricted, Not an admin\"){\n          this.adminForm.reset();\n          Swal.fire({\n            title: 'Try Again',\n            text: 'Entry restricted, Not an admin.',\n            type: 'error',\n            confirmButtonText: 'Ok',\n          })\n        } else if(err.error.error == \"Invalid Credentials\"){\n          this.adminForm.reset();\n          Swal.fire({\n            title: 'Try Again',\n            text: 'Invalid Credentials',\n            type: 'error',\n            confirmButtonText: 'Ok',\n          })\n        }\n      }\n    )\n  }\n\n\n  onForgot(){\n    this.route.navigate(['admin','forgot-pass'])\n  }\n\n}\n","export default \"nb-card {\\n    margin: 1rem 30rem;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYWRtaW4tbG9naW4vZm9yZ290LXBhc3MvZm9yZ290LXBhc3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtFQUNwQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWxvZ2luL2ZvcmdvdC1wYXNzL2ZvcmdvdC1wYXNzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJuYi1jYXJkIHtcbiAgICBtYXJnaW46IDFyZW0gMzByZW07XG4gIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdminAuthService } from 'src/app/services/admin-auth.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-forgot-pass',\n  templateUrl: './forgot-pass.component.html',\n  styleUrls: ['./forgot-pass.component.css']\n})\nexport class ForgotPassComponent implements OnInit {\n  forgotForm:FormGroup;\n  userId:any;\n  userdetail:any;\n  numberFormat = '[6-9][0-9]{9}';\n\n  \n  constructor(private as:AdminServiceService, private formbuilder:FormBuilder, private route:Router, private activeRoute:ActivatedRoute, private aas:AdminAuthService) {\n    if(this.aas.isLoggedIn()){\n      this.route.navigate(['/'])\n    }\n   }\n\n  ngOnInit() {\n    this.forgotForm = this.formbuilder.group({\n      'phone_number': new FormControl(null, Validators.compose([Validators.required,Validators.pattern(this.numberFormat)]))\n    });\n  }\n\n  onForgot(){\n    this.as.postAdminForgot(this.forgotForm.value).subscribe(\n      res => {\n        // console.log(res)\n        this.userdetail = res;\n        this.userId = this.userdetail.user_id;\n        // console.log(this.userId);\n        this.route.navigate(['../reset-pass',this.userId],{relativeTo:this.activeRoute})\n      }, err => {\n        // console.log(err);\n        if(err.error.error == \"Not an Admin User\"){\n          this.forgotForm.reset();\n          Swal.fire({\n            title: 'Try Again',\n            text: 'Not an Admin User',\n            type: 'error',\n            confirmButtonText: 'Ok',\n          })\n        }\n      }\n    )\n  }\n\n}\n","export default \"nb-card {\\n    margin: 1rem 30rem;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYWRtaW4tbG9naW4vcmVzZXQtcGFzcy9yZXNldC1wYXNzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7RUFDcEIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9hZG1pbi1sb2dpbi9yZXNldC1wYXNzL3Jlc2V0LXBhc3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm5iLWNhcmQge1xuICAgIG1hcmdpbjogMXJlbSAzMHJlbTtcbiAgfSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\nimport { AdminAuthService } from 'src/app/services/admin-auth.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-reset-pass',\n  templateUrl: './reset-pass.component.html',\n  styleUrls: ['./reset-pass.component.css']\n})\nexport class ResetPassComponent implements OnInit {\n  resetForm:FormGroup;\n  userId:any;\n  notSame= true;\n\n  constructor(private formbuilder:FormBuilder,private activeRoute:ActivatedRoute, private as:AdminServiceService, private route:Router, private aas:AdminAuthService) { \n    if(this.aas.isLoggedIn()){\n      this.route.navigate(['/'])\n    }\n  }\n\n  ngOnInit() {\n\n    this.activeRoute.params.subscribe(params => {\n      // console.log(params['id']);\n      this.userId = params['id'];\n    })\n\n    this.resetForm = this.formbuilder.group({\n      'otp': new FormControl(null, [Validators.required,Validators.maxLength(4),Validators.minLength(4)]),\n      'new_password': new FormControl(null, Validators.required),\n      'confirm_password': new FormControl(null, Validators.required)\n    });\n  }\n\n  onReset(){\n    this.as.postAdminReset(this.resetForm.value,this.userId).subscribe(\n      res => {\n        // console.log(res);\n        this.route.navigate(['admin'])\n      }, err => {\n        // console.log(err);\n        if(err.error.error == \"Invalid OTP\"){\n          this.resetForm.reset();\n          Swal.fire({\n            title: 'Try Again',\n            text: 'Entry restricted, Not an admin.',\n            type: 'error',\n            confirmButtonText: 'Ok',\n          })\n        }\n      }\n    )\n  }\n\n  ngAfterViewInit(): void{\n    this.resetForm.controls['confirm_password'].valueChanges.subscribe(value => {\n      let password = this.resetForm.get('new_password').value;\n      let confirmPassword = this.resetForm.get('confirm_password').value;\n      if(password === confirmPassword){\n        this.notSame = false;\n      }else{\n        this.notSame = true;\n      }\n      // console.log(this.notSame);\n    })\n    \n    // return password === confirmPassword ? null : { notSame: true }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\nimport { OrdersComponent } from './admin-dashboard/orders/orders.component';\nimport { CreateCategoryComponent } from './admin-dashboard/create-category/create-category.component';\nimport { AllCategoryComponent } from './admin-dashboard/all-category/all-category.component';\nimport { AllSubcategoryComponent } from './admin-dashboard/all-subcategory/all-subcategory.component';\nimport { AddSubcategoryComponent } from './admin-dashboard/add-subcategory/add-subcategory.component';\nimport { AllProfessionalComponent } from './admin-dashboard/all-professional/all-professional.component';\nimport { ViewProfessionalsComponent } from './admin-dashboard/view-professionals/view-professionals.component';\nimport { AddProfessionalComponent } from './admin-dashboard/add-professional/add-professional.component';\nimport { UsersComponent } from './admin-dashboard/users/users.component';\nimport { AdminOrderDetailsComponent } from './admin-dashboard/admin-order-details/admin-order-details.component';\nimport { AddQuestionsComponent } from './admin-dashboard/add-questions/add-questions.component';\nimport { AddOptionsComponent } from './admin-dashboard/add-options/add-options.component';\nimport { BulkMessageComponent } from './admin-dashboard/bulk-message/bulk-message.component';\nimport { AdminAuthguardService } from '../services/admin-authguard.service';\nimport { ForgotPassComponent } from './admin-login/forgot-pass/forgot-pass.component';\nimport { ResetPassComponent } from './admin-login/reset-pass/reset-pass.component';\n\n\n\nconst routes: Routes = [\n     { path: '', component: AdminLoginComponent },\n     { path: 'forgot-pass', component: ForgotPassComponent },     \n     { path: 'reset-pass/:id', component: ResetPassComponent },     \n    { path: 'admin-dashboard',canActivate: [AdminAuthguardService], component: AdminDashboardComponent,children:[\n    { path: '', component: OrdersComponent },\n    { path: 'category', component: CreateCategoryComponent,pathMatch: 'full' },\n      { path: 'category/:id', component: CreateCategoryComponent,pathMatch: 'full' },\n      { path: 'allCategory', component: AllCategoryComponent },\n      { path: 'allSubcategory', component: AllSubcategoryComponent },\n      { path: 'subcategory', component: AddSubcategoryComponent },\n      { path: 'subcategory/:id', component: AddSubcategoryComponent },\n      { path: 'professionals', component: AllProfessionalComponent },\n      { path: 'professionals/:id', component: ViewProfessionalsComponent },\n      { path: 'addProfessional', component: AddProfessionalComponent },\n      { path: 'addProfessional/:id', component: AddProfessionalComponent },\n      { path: 'users', component: UsersComponent },\n      { path: 'order-deatils/:id', component: AdminOrderDetailsComponent },\n      { path: 'add-question', component: AddQuestionsComponent },\n      { path: 'add-option', component: AddOptionsComponent },\n      { path: 'bulk-message', component: BulkMessageComponent }\n\n  ] }\n\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NbThemeModule, NbCardModule, NbTreeGridModule, NbTabsetModule, NbDialogModule, NbRadioModule, NbListModule, NbUserModule, NbAccordionModule, NbSelectModule, NbCheckboxModule, NbInputModule } from '@nebular/theme';\nimport { NbSidebarModule, NbLayoutModule, NbButtonModule, NbMenuModule } from '@nebular/theme';\n\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\nimport { CreateCategoryComponent } from './admin-dashboard/create-category/create-category.component';\nimport { AllCategoryComponent } from './admin-dashboard/all-category/all-category.component';\nimport { AllSubcategoryComponent } from './admin-dashboard/all-subcategory/all-subcategory.component';\nimport { AddSubcategoryComponent } from './admin-dashboard/add-subcategory/add-subcategory.component';\nimport { AddProfessionalComponent } from './admin-dashboard/add-professional/add-professional.component';\nimport { AllProfessionalComponent } from './admin-dashboard/all-professional/all-professional.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UsersComponent } from './admin-dashboard/users/users.component';\nimport { OrdersComponent } from './admin-dashboard/orders/orders.component';\nimport { AdminOrderDetailsComponent } from './admin-dashboard/admin-order-details/admin-order-details.component';\nimport { ViewProfessionalsComponent } from './admin-dashboard/view-professionals/view-professionals.component';\nimport { AddQuestionsComponent } from './admin-dashboard/add-questions/add-questions.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AddOptionsComponent } from './admin-dashboard/add-options/add-options.component';\nimport { BulkMessageComponent } from './admin-dashboard/bulk-message/bulk-message.component';\nimport { AdminAuthguardService } from '../services/admin-authguard.service';\nimport { ForgotPassComponent } from './admin-login/forgot-pass/forgot-pass.component';\nimport { ResetPassComponent } from './admin-login/reset-pass/reset-pass.component';\n\n\n\n@NgModule({\n  declarations: [AdminLoginComponent, AdminDashboardComponent, CreateCategoryComponent, AllCategoryComponent, AllSubcategoryComponent, AddSubcategoryComponent, AddProfessionalComponent, AllProfessionalComponent,UsersComponent, OrdersComponent, AdminOrderDetailsComponent, ViewProfessionalsComponent, AddQuestionsComponent, AddOptionsComponent, BulkMessageComponent, ForgotPassComponent, ResetPassComponent],\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    NbLayoutModule,\n    NbSidebarModule,\n    NbButtonModule,\n    NbMenuModule.forRoot(),\n    NbCardModule,\n    NbTreeGridModule,\n    NbTabsetModule,\n    NbDialogModule.forChild(),\n    NbListModule,\n    NbUserModule,\n    NbAccordionModule,\n    NbRadioModule,\n    NbSelectModule,\n    NbCheckboxModule,\n    NbInputModule\n  ],\n  providers: [ AdminAuthguardService\n  ],\n})\n\nexport class AdminModule {\n\n  \n }\n","import { Injectable } from '@angular/core';\nimport * as jwt_decode from \"jwt-decode\";\nimport { AuthService } from './auth.service';\nimport { AdminServiceService } from './admin-service.service';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthService {\n  currentDate:any;\n  newAccessToken:any;\n  constructor(private as:AdminServiceService, private route:Router) { }\n   \n  storeAdminRefreshToken(token: string) {\n    localStorage.setItem('Refresh-admin', token);\n  }\n\n  storeAdminAccessToken(token: string) {\n    localStorage.setItem('Access-admin', token);\n  }\n\n  getAdminRefreshToken() {\n    return localStorage.getItem('Refresh-admin')\n  }\n\n  getAdminAccessToken() {\n    return localStorage.getItem('Access-admin')\n  }\n\n  isLoggedIn() {\n    this.currentDate = new Date();\n    // console.log(this.currentDate);\n\n    if (this.getAdminAccessToken() ) {\n      if(this.currentDate > this.getRefreshTokenExpirationDate(this.getAdminRefreshToken())){\n        this.removeAdminAccessToken();\n        this.removeAdminRefreshToken();\n        this.route.navigate(['']);\n        return false;\n    }\n      if(this.currentDate < this.getTokenExpirationDate(this.getAdminAccessToken())){\n        return true\n      } else {\n        this.removeAdminAccessToken();\n        // console.log('refresh token');\n        // console.log(this.getAdminRefreshToken());\n        const refresh={\n          \"refresh\" : this.getAdminRefreshToken()\n        }\n        console.log(refresh);\n        this.as.postAdminRefreshToken(refresh).subscribe(\n          res=>{\n            console.log(res);\n            this.newAccessToken = res;\n            this.storeAdminAccessToken(this.newAccessToken.access);\n            return true;\n          },err =>{\n            // console.log(err);\n          }\n        )\n        return false;\n      }\n    } else {\n      return false\n    }\n  }\n\n\n  getTokenExpirationDate(token: string): Date {\n    const decoded = jwt_decode(token);\n\n    if (decoded.exp === undefined) return null;\n\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n    // console.log(date);\n    return date;\n  }\n\n  getRefreshTokenExpirationDate(token: string): Date {\n    const decoded = jwt_decode(token);\n\n    if (decoded.exp === undefined) return null;\n\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n    // console.log(date);\n    return date;\n  }\n\n\n  removeAdminAccessToken() {\n    localStorage.removeItem('Access-admin');\n  }\n\n  removeAdminRefreshToken() {\n    localStorage.removeItem('Refresh-admin');\n  }\n}\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\nimport { AdminAuthService } from './admin-auth.service';\n\n\n@Injectable()\nexport class AdminAuthguardService implements CanActivate {\n  constructor(private adminauth: AdminAuthService, private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    \n    if (this.adminauth.isLoggedIn() === true) {\n     \treturn true;\n     } \n     else {\n      this.router.navigate(['']);\n     }\n     \n  }\n\n}\n"],"sourceRoot":"webpack:///"}